# Configuration file for the emulator

## Emulator type: you can choose between a NN emulator or a GP emulator.
emulator_type: "NN"

## Emulator label: if you want to train a predefined model, you can use the emulator_label. Other possible labels are in the README.md file.
emulator_label: "Nyx_alphap_cov"

## If the emulator needs to be trained without a specific simulation.
drop_sim: null

## For the data, you can choose between loading and archive or a training set. You can only provide one of them.
### If you choose to load an archive, you can choose between Nyx or Gadget and a version.
archive:
  file: Nyx  # Can be either "Nyx" or "Gadget"
  version: "Jul2024" #nyx version or Gadget postprocessing version

sim_test: "nyx_central"  #Predefined training sets. You can find the options in the README.md file.

## If no emulator_label is provided, you need to provide the hyperparameters for training a new model and the emulator parameters
emulator_params: ["Delta2_p", "n_p", "alpha_p", "sigT_Mpc", "gamma", "kF_Mpc"]

## Plot error avearge over all redshift or by redshift 
average_over_z: false
## Where to save the trained model from the project root directory
save_plot_path: "../data/validation_figures/tests/test_p1d_err.png" 
save_predictions_path: null
